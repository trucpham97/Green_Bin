// Specific CSS for your home-page
body {
  background-color: $secondary-color;

}
.option-card {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;

  margin: auto;
  margin-top: 20px;
  background-color: #f8f9e6;

  border-radius: 5px;

  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
  padding: 10px;

  width: 80%;
}

.no-margin-p {
  margin: 0;
}


// From here: fun particles stuff
.container {
  width: 100%;
  height: 100%;
  // overflow: hidden;
  position: relative;
}

.circle-container {
  $particleNum: 50;
  $particleColor: hsl(155, 92%, 29%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
      hsl(155, 100%, 80%),
      hsl(155, 100%, 80%) 10%,
      hsla(155, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  $particleBaseSize: 8;


  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: random($particleBaseSize);
      width: $circleSize + px;
      height: $circleSize + px;

      // $startPositionY: random(10) + 100;
      $startPositionY: ($i * 2) + 100;
      $framesName: "move-frames-" + $i;
      $moveDuration: 50000 + random(9000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(100000) + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(
            #{random(100) + vw},
            #{$startPositionY + vh},
            0
          );
        }

        to {
          transform: translate3d(
            #{random(100) + vw},
            #{- $startPositionY - random(30) + vh},
            0
          );
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
}

.intro-body {

}

// * {
//   border: solid  red 1px;
// }

.banner-intro {
  display: flex;
  background-image: url(wallp_3.jpg);
  background-size: cover;
  background-position: center;

  height: 100vh;
  align-items: center;
  margin: auto;

}

.intro-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  text-align: center;

  margin: auto;
  gap: 40px;

  transform: translateY(-40px);
}

.logo-intro {
  display: flex;
  height: 100px;

}

.logo-title-intro {
  display: flex;
  font-family: $title-font;
  font-size: 32px;
  color: white;
  letter-spacing: 2px;
  margin: 0;
}

.skip-tuto-btn {
  display: flex;
  text-decoration: none;
  color: white;
}




// particles effects
.particle-container {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.circle-container {
  $particleNum: 50;
  $particleColor:  hsl(120, 50%, 55%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
      hsl(120, 50%, 55%),
      hsl(0, 0%, 100%) 10%,
      hsla(180, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  $particleBaseSize: 8;


  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: random($particleBaseSize);
      width: $circleSize + px;
      height: $circleSize + px;

      $startPositionY: random(10) + 100;
      $framesName: "move-frames-" + $i;
      $moveDuration: 28000 + random(9000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(37000) + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(
            #{random(100) + vw},
            #{$startPositionY + vh},
            0
          );
        }

        to {
          transform: translate3d(
            #{random(100) + vw},
            #{- $startPositionY - random(30) + vh},
            0
          );
        }
      }

      .circle {
        animation-delay: random(4000) + ms;
      }
    }
  }
}
